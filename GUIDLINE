# 项目说明及命名规范

## 项目目录结构
	book  深入理解PHP内核书籍相关的所有内容. 其中内容采用markdown格式维护, 其下的子目录结构如下:
		index.markdown 本书的索引页面
		chapt01...chaptN  图书章节的内容
		images	图书内的插图图片.以章节形式组织
		sample	书内使用的实例代码片段. 也以章节形式组织
		A-PHP*	类似附录等内容可以放在这个层级
	media 		项目相关的一些多媒体素材, 界面设计相关源文件等
	projects	tipi项目组的一些子项目. 包括但不限于PHP或者PHP底层相关项目

	web		该目录为项目的web根目录,用于显示项目主页以及阅读TIPI书籍的界面
		book 		访问书籍的目录
		templates	为了逻辑视图分离,将视图相关内容都放在templates目录下,支持布局以及markdown视图
		css			项目中使用的样式文件
		images		项目中使用到的图片素材文件
			book    <---> 软链接到项目根目录的book/images文件夹
					** 注意 ** 为了将图书的图片素材自包含. 同时能在web页面下访问到图片. 所以在编辑book/*.markdown文件的时候需要
					注意图片资源的地址路径
		javascript
	php-src	该目录为我们在项目中使用的php源文件.该目录为一个子模块. 请参考git submodule


## 文件命名约定
book目录作为书籍所有资源的目录, 目录主要存放书markdown格式的文件内容以及图示图表或者大段的实例代码等资源,
为了方便管理, 对相关资源的文件名进行命名约定规范化. 资源的以章为管理层级. 如上对项目目录结构的介绍.

### 章节文件的命名约定
下面的约定包括{章序号}及{小节序号}的约定, 因为本书共约10+章,为了保证文件在名称上的一致性.序号均以01-99的方式展示.
*	目录页命名为 "index.markdown"
*	章前言小节  "{章序号}-{00}-{章标题的英文描述}.markdown"
	每一章都包含本章将要涉及或者给读者一些引导性的描述内容. 该文件的小节编号为00. 因为该小节在逻辑上是先于所有其他
	小节的.也作为一个前言.所以约定为00小节

*  	小节文件以"{章序号}-{小节序号}-{小节标题英文描述}.markdown"
	如果小节内容比较多, 一个文件不方便维护则可以以类似 "{章序号}-{小结序号}-{小节内序号}-{小节标题英文描述}.markdown"的
	方式命名, 不过不推荐过多层级的方式. 如果内容过多可以考虑独立成为一个小节.

*	类似附录致谢等等不属于某一章节的文件则直接存放在book目录下

### 其他资源的命名约定
*	图片及实例代码或者其他资源均以章节文件的层级及命名约定的方式管理. 例如:
	* 图片以 book/images/chapt01/01-02-sample.png
	* 代码以 book/sample/chapt01/01-03-function.php


### 章节的编写和认领
认领的哥在/book/index.markdown目录的小节后面写上自己的id，在提交时小节如果没有完成则在后面增加完成百分比，例如: 第一节 变量的内存表示 [er:20%],
如果完成了则将id及进度删除

为了提交效率，每个id不能同时认领超过2个小节
